names(req)
req
stop_for_status(req)
content(req)
str(req)
library("jsonlite")
jsoned<-froJSON(req)
jsoned<-fromJSON(req)
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
myapp <- oauth_app("github",key="40220c72ae40b454754c",secret="ace29deeab61c6c09553173d8ce2d1d599635902")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token=github_token)
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
req<-GET("https://api.github.com/users/jtleek/repos",gtoken)
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
install.packages("curl")
install.packages("curl")
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
library("jsonlite")
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
jsoned<-fromJSON(GET("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902"))
fromJSON(req)
req
toJSON(req)
json1 = content(req)
json1
json2 =jsonlite::fromJSON(toJSON(json1))
json2
class(req)
json1<-toJSON(req)
req
class(req)
json1 = content(req)
class(json1)
json2<-toJSON(json1)
class(json2)
json2 =fromJSON(toJSON(json1))
json1 = content(req)
json2 =fromJSON(toJSON(json1))
json2
names(json2)
head(json2)
json2[6,]
json2[6,]$created_at
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url, destfile="acs.csv", "internal")
library("sqldf")
install.packages("sqldf")
library("sqldf")
acs<-read.csv("acs.csv")
head(acs)
acs$pwgtp1
which(acs$pwgtp1<50)
acs$pwgtp1<50
acs[acs$pwgtp1<50]
acs[acs$pwgtp1<50,]
subset(acs$pwgtp1, acs$pwgtp1<50)
mean(subset(acs$pwgtp1, acs$pwgtp1<50))
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
?nchar
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(9,3,4,3,4,3,4,3,4))
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,3,4,3,4,3,4,3,4))
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,5,4,5,4,5,4))
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,5,4,5,4,5,4),header=TRUE)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,5,4,5,4,5,4),header=TRUE, sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",header=TRUE, sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",header=TRUE, sep=" ", widths=c(10,4))
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",header=TRUE, sep=" ", widths=c(10,4), skip=1)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", sep=" ", widths=c(10,4), skip=1)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", sep=" ", widths=c(3), skip=1)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(3), skip=1)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,5), skip=1)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=1)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2, header=TRUE,sep="/n")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2, header=TRUE,sep="")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2, header=TRUE,sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3, header=TRUE,sep="")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3, header=TRUE,sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5,4), skip=3)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4,5), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4,5,4,5), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4,5,4,5,4), skip=4)
head(data)
data
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
head(data)
data$v4
data$V4
class(data$v4)
class(data$V4)
sum(data$V4)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, BodyWeight)
?xyplot
library(datasets)
data(airquality)
head(airquality)
class(airquality)
colClass(airquality)
colClasses(airquality)
classes(airquality)
classes<-sapply(airquality,class)
classes
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages(ggplot2)
install.packages(ggplot)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
classes<-sapply(airquality,class)
classes
library(datasets)
data(airquality)
classes<-sapply(airquality,class)
classes
setwd("C:/Users/Serena/RepData_PeerAssessment1")
library(dplyr)
data <- read.csv("activity.csv")
activity<-group_by(data, date)
TotalSteps<-summarize(activity, steps=sum(steps))
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
meanSteps<-mean(TotalSteps$steps, na.rm=TRUE)
medianSteps<-median(TotalSteps$steps, na.rm=TRUE)
str(meanSteps)
names(data)
avgIntSteps<-tapply(data$steps, data$interval, mean)
avgIntSteps
avgIntSteps<-tapply(data$steps, data$interval, mean, na.rm=TRUE)
head(avgIntSteps)
avgIntSteps
str(avgIntSteps)
intervals<- strptime(sprintf("%04d", as.numeric(names(avgIntSteps))), format="%H%M")
intervals
intervals
intervals
avgOmtSteps
plot(strptime(intervals, avgIntSteps, type="l")
plot(strptime(intervals, avgIntSteps, type="l"))
#2
plot(strptime(intervals, avgIntSteps, type="l"))
plot(intervals, avgIntSteps, type="l")
plot(intervals, avgIntSteps, type="l", breaks=5)
plot(intervals, avgIntSteps, type="l", breaks=5, xlab="Intervals", ylab="Steps", main="Avg Steps Taken by Interval")
head(avgIntSteps)
avgIntSteps
max(avgIntSteps)
match(206.1698. avgIntSteps)
match(206.1698, avgIntSteps)
which(avgIntSteps %in% max(avgIntSteps))
avgIntSteps[104]
maxIndex<-which(avgIntSteps %in% max(avgIntSteps)) #find index of max value
maxIndex
intervals[104]
names(avgIntSteps)
dim(intervals)
length(intervals)
names(avgIntSteps)[maxIndex]
which(avgIntSteps %in% max(avgIntSteps))
max(avgIntSteps)
match(max(avgIntSteps), avgIntSteps)
avgIntSteps[104]
names(avgIntSteps[max(avgIntSteps)])
maxIndex<-which(avgIntSteps %in% max(avgIntSteps)) #find index of max value
names(avgIntSteps)[maxIndex]
class(data)
sum(is.na(data$steps))
dim(data)
names(data)
sum(is.na(data$date))
sum(is.na(data$interval))
is.na(data$steps)
data2<-data
warnings(0)
dim(data2)
data2<- read.csv("activity.csv")
?mutate
?replace
TotalSteps
meanSteps
avgIntSteps
avgIntSteps$5
avgIntSteps["5"]
data2<- read.csv("activity.csv")
mutate(data2, steps=replace(data2$steps, is.na(data2$steps)), avgIntSteps[data2$interval])
data$interval
mutate(data2, steps=replace(data2$steps, is.na(data2$steps)), avgIntSteps)
lookup_mean<-function{interval}
return avgIntSteps[str(interval)]
lookup_mean<-function{interval}
return avgIntSteps[str(interval)]
}
return (avgIntSteps[str(interval)])
lookup_mean<-function{interval}
return(avgIntSteps[str(interval)])
lookup_mean<-function(interval){}
return avgIntSteps[str(interval)]
}
lookup_mean<-function(interval){
return avgIntSteps[str(interval)]
}
lookup_mean<-function(interval){
return avgIntSteps[str(interval)]}
lookup_mean<-function(interval, dataset){
mean<-dataset[str(interval)]
return mean}
lookup_mean<-function(interval, dataset){
mean<-dataset[str(interval)]
return(mean)
}
lookup_mean(0,avgIntSteps)
avgIntSteps
avgIntSteps[str(0)]
lookup_mean<-function(interval, dataset){
mean<-dataset[str(interval)]
return(mean)
}
lookup_mean<-function(interval, dataset){
mean<-dataset[str(interval)]
return(mean)
}
avgIntSteps[0]
avgIntSteps
avgIntSteps[0]
avgIntSteps[1]
avgIntSteps(toString(0))
avgIntSteps[toString(0)]
avgIntSteps[toString(1)]
avgIntSteps[toString(2)]
avgIntSteps[toString(3)]
avgIntSteps[toString(5)]
lookup_mean<-function(interval, dataset){
mean<-dataset[toString(interval)]
return(mean)
}
lookup_mean(5, avgIntSteps)
mutate(data2, steps=ifelse(is.na(data2$steps), lookup_mean(interval, avgIntSteps), steps))
head(data2)
data
data <- read.csv("activity.csv")
data2<- read.csv("activity.csv")
lookup_mean<-function(interval, dataset){
mean<-dataset[toString(interval)]
return(mean)
}
mutate(data2, steps=ifelse(is.na(data2$steps), lookup_mean(data2$interval, avgIntSteps), data2$steps))
head(data2)
head(data)
data2$interval
data2$interval[1]
data2$interval[2]
head(interva)
test<-c()
test
test<-c(1)
test
averages <- aggregate(x=list(steps=data$steps), by=list(interval=data$interval),
FUN=mean, na.rm=TRUE)
head(averages)
avgIntSteps
head(averages)
class(avgIntSteps)
test<-table(avgIntSteps)
test
class(averages)
avgIntSteps2<-data.frame(names(avgIntSteps), avgIntSteps)
head(avgIntSteps2)
avgIntSteps2<-data.frame(avgIntSteps)
avgIntSteps2
head(avgIntSteps2)
avgIntSteps2[25]
avgIntSteps2[25,1]
avgIntSteps2<-data.frame(names(avgIntSteps),avgIntSteps)
dim(avgIntSteps2)
names(avgIntSteps2)
colnames(avgIntSteps2)<-c("intervals", "steps")
avgIntSteps2
head(avgIntSteps2)
colnames(avgIntSteps2)
avgIntSteps2<-data.frame(names(avgIntSteps),avgIntSteps)
colnames(avgIntSteps2)<-c("interval", "steps")
impute<-function(steps,interval){
Means <-c()
if(is.na(steps))
Means<-c(avgIntSteps2[avgIntSteps2$interval==interval,"steps"])
else
Means<-c(steps)
}
data2$steps<-mapply(impute, data2$steps, data2$interval)
head(data2)
head(data)
data[10,]
avgIntSteps2$interval==data2$interval
data2<- read.csv("activity.csv")
avgIntSteps2$interval==data2$interval
all(avgIntSteps2$interval==data2$interval)
data2<-group_by(data2, date)
TotalStep2<-summarize(data2, steps=sum(steps))
TotalStep2
data2
data2$steps<-mapply(impute, data2$steps, data2$interval)
data2<-group_by(data2, date)
data2
TotalStep2<-summarize(data2, steps=sum(steps))
TotalStep2
activity2<-group_by(data2, date)
data2$steps<-mapply(impute, data2$steps, data2$interval)
activity2<-group_by(data2, date)
TotalStep2<-summarize(activity2, steps=sum(steps))
TotalStep2
test<-filter(data2, date==2012-10-01)
test
dim(date)
dim(test)
data2
test<-filter(data2, date=="2012-10-01")
dim(test)
sum(test2$steos)
sum(test$steps)
head(test)
head(test, -5)
tail(test)
hist(TotalStep2$steps, main="Total Steps Taken Per Day", xlab="# Steps")
hist(TotalStep2$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
hist(TotalStep2$steps, breaks=101, main="Total Steps Taken Per Day", xlab="# Steps")
hist(TotalStep2$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
hist(TotalStep2$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
TotalStep2
summary(TotalStep2)
str(TotalStep2)
meanSteps2<-mean(TotalStep2$steps)
medianSteps<-median(TotalStep2$steps)
meanSteps2
meanSteps
summary(TotalSteps)
medianSteps
medianSteps2
medianSteps<-median(TotalSteps$steps, na.rm=TRUE)
medianSteps2<-median(TotalStep2$steps)
medianSteps
medianSteps2
activity<-group_by(data, date)
TotalSteps<-summarize(activity, steps=sum(steps))
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
meanSteps<-mean(TotalSteps$steps, na.rm=False)
meanSteps<-mean(TotalSteps$steps, na.rm=FALSE)
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
meanSteps
total.steps <- tapply(data$steps, data$date, FUN = sum, na.rm = TRUE)
head(total.steps)
mean(total.steps)
head(TotalSteps)
TotalSteps<-summarize(activity, steps=sum(steps,na.rm=TRUE))
head(TotalSteps)
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
meanSteps<-mean(TotalSteps$steps, na.rm=TRUE)
medianSteps<-median(TotalSteps$steps, na.rm=TRUE)
?weekdays
weekdays(7-19-2015)
weekdays(7/19/2015)
weekdays(as.date(7/19/2015))
weekdays(as.Date(7/19/2015))
weekdays(as.Date(2015-07-19))
weekdays(as.Date("2015-07-19"))
dayofweek<-weekdays(as.Date(data2$date))
dayofweek
data2$dayofweek<-weekdays(as.Date(data2$date))
head(data2)
if(data2$date=="Saturday"|"Sunday")
data2$test <- "Weekend"
else
data2$test<-"Weekday"
data2$date=="Saturday"|"Sunday"
"Saturday"|"Sunday" %in% data2$date
"Saturday" %in% data2$date
Saturday %in% data2$date
"Saturday" %in% data2$date
"Sunday" %in% data2$date
"Monday" %in% data2$date
class(data2$date)
"Monday" %in% data2$dayofweek
"Saturday"|"Sunday" %in% data2$ayofweek
"Saturday"|"Sunday" %in% data2$dayofweek
data2$dayofweek
class(data2$dayofweek)
data2$dayofweek=="Saturday"|"Sunday"
data2$dayofweek[data2$dayofweek=="Sunday"]
if data2$dayofweek[data2$dayofweek=="Sunday"]
data2$test <- "Weekend"
if (data2$dayofweek[data2$dayofweek=="Sunday"])
data2$test <- "Weekend"
head(data2)
data2$dayofweek=="Monday"
if (data2$dayofweek=="Sunday")
data2$test <- "Weekend"
head(data2)
if (data2$dayofweek=="Sunday")
data2$test <- "Weekend"
else if (data2$dayofweek=="Saturday")
data2$test<-"Weekend"
else
data2$test<-"Weekday"
head(data2)
"weekend" %in% data2$test
"weekday" %in% data2$test
"Weekday" %in% data2$test
"Weekend" %in% data2$test
tail(data2)
data2$test[data2$dayofweek=="Monday"]<-"Weekday"
end
data2$test[data2$dayofweek=="Monday"]<-"Weekend"
head(data2)
data2$test[data2$dayofweek=="Sunday"|"Saturday"]<-"Weekend"
data2$test[data2$dayofweek=="Sunday]<-"Weekend"
data2$test[data2$dayofweek=="Sunday"]<-"Weekend"
data2$test[data2$dayofweek==c("Sunday"|"Saturday"]<-"Weekend"
data2$test[data2$dayofweek==c("Sunday"|"Saturday)"]<-"Weekend"
data2$test[data2$dayofweek==c("Sunday"|"Saturday")]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Sunday"]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Saturday"]<-"Weekend"
data2$steps<-mapply(impute, data2$steps, data2$interval)
data2$dayofweek<-weekdays(as.Date(data2$date))
data2$dayofweek[data2$dayofweek=="Sunday"]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Saturday"]<-"Weekend"
data2$test[data2$dayofweek==c("Sunday"|"Saturday")]<-"Weekend"
head(data2)
data2$steps<-mapply(impute, data2$steps, data2$interval)
data2$dayofweek<-weekdays(as.Date(data2$date))
data2$dayofweek[data2$dayofweek=="Sunday"]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Saturday"]<-"Weekend"
head(data2)
data2<- read.csv("activity.csv")
data2$steps<-mapply(impute, data2$steps, data2$interval)
data2$dayofweek<-weekdays(as.Date(data2$date))
data2$dayofweek[data2$dayofweek=="Sunday"]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Saturday"]<-"Weekend"
head(data2)
data2$dayofweek[data2$dayofweek=="Sunday"]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Saturday"]<-"Weekend"
data2$dayofweek[data2$dayofweek=="Monday"]<-"Weekday"
data2$dayofweek[data2$dayofweek=="Tuesday"]<-"Weekday"
data2$dayofweek[data2$dayofweek=="Wednesday"]<-"Weekday"
data2$dayofweek[data2$dayofweek=="Thursday"]<-"Weekday"
data2$dayofweek[data2$dayofweek=="Friday"]<-"Weekday"
head(data2)
class(data2$dayofweek)
data2$dayofweek<-as.factor(data2$dayofweek)
head(data2)
library(ggplot2)
?group_by
test<-group_by(data2, dayofweek, interval)
test
total.step<-summarize(test,steps=sum(steps))
total.step
AvgSteps<-summarize(test,steps=mean(steps))
AvgSteps
dim(AvgSteps)
tail(AvgSteps)
ggplot(AvgSteps, aes(x=interval, y=steps))+geom_line(color="blue")
ggplot(AvgSteps, aes(x=interval, y=steps))+geom_line(color="blue")+facet_grid(dayofweek~.)
maxIndex<-which(avgIntSteps %in% max(avgIntSteps)) #find index of max value
names(avgIntSteps)[maxIndex]
numNA<-sum(is.na(data$steps))
numNA
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
library(knitr)
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
setwd("C:/Users/Serena/RepData_PeerAssessment1")
unzip("repdata-data-activity.zip")
data <- read.csv("activity.csv")
library(dplyr)
TotalSteps<-summarize(activity, steps=sum(steps,na.rm=TRUE))
activity<-group_by(data, date)
TotalSteps<-summarize(activity, steps=sum(steps,na.rm=TRUE))
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
mean(TotalSteps$steps, na.rm=TRUE)
median(TotalSteps$steps, na.rm=TRUE)
