str(<<-)
?"<<-"
? solve
m<-matrix(c(-1,-2,1,1),2,2)
m
solve(m) %*% m
m %*% solve(m)
solve(m)
y<-matrix(c(1,3,2,4),2,2)
y
solve(y)
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() {
x
}
setInverse <- function (x){
inverse <<- solve(x)
}
getInverse <- function (){
inverse
}
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
x<-makeCachematrix(y)
x<-makeCacheMatrix(y)
x$get
x$get()
x$getInverse()
x$setInverse()
x$set()
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
v1<-c(1:4)
v1
test<-makeVector(v1)
test
test$get()
test$setMean()
test$setmean()
test$set()
test$getmean()
mean(3,4)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() {
x
}
setInverse <- function (x){
inverse <<- solve(x)
}
getInverse <- function (){
inverse
}
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inverse<-x$getInverse()
if(is.null(inverse)) {
data <- x$get()
inverse<-solve(data)
x$setinverse(inverse)
inverse
}
message("getting cached data")
return(inverse)
#solve(c) %*% c
}
m
x<-makeCacheMatrix(m)
x$get()
inv<-cacheSolve(x)
inv
x$getInverse()
x$get()
matrix1<-x$get()
solve(matrix1)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() {
x
}
setInverse <- function (x){
inverse <<- solve(x)
}
getInverse <- function (){
inverse
}
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inverse<-x$getInverse()
if(is.null(inverse)) {
data <- x$get()
inverse<-solve(data)
x$setInverse(inverse)
inverse
}
message("getting cached data")
return(inverse)
#solve(c) %*% c
}
inv<-cacheSolve(x)
inv
c<-matrix(c(3,2,4,7),2,2)
c
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() {
x
}
setInverse <- function (x){
inverse <<- solve(x)
}
getInverse <- function (){
inverse
}
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inverse<-x$getInverse()
if(is.null(inverse)) {
data <- x$get()
inverse<-solve(data,...)
x$setInverse(inverse)
inverse
}
message("getting cached data")
return(inverse)
#solve(c) %*% c
}
cacheSolve(x)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(y) {
x <<- y
inverse <<- NULL
}
get <- function() {
x
}
setInverse <- function (x){
inverse <<- solve(x)
}
getInverse <- function (){
inverse
}
list(set = set, get = get, setInverse = setInverse, getInverse = getInverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inverse<-x$getInverse()
if(!is.null(inverse)) {
message("getting cached data")
return(inverse)
}
data <- x$get()
inverse <- solve(data,...)
x$setInverse(inverse)
inverse
}
x
cacheSolve(x)
makeCacheMatrix(x)
x
v1
m
makeCacheMatrix(m)
str(mean)
x<-rnorm(100,2,4)
summary(x)
str(x)
x
gl(40,10)
m
?split
library(datasets)
head(airquality)
s<-split(airquality, airquality$Month)
s
str(s)
set.seed(20)
x<-rnorm(100)
x
e<-rnorm(100,0,2)
e
sd(e)
?plot
?rbinom
set.seed(10)
x<-rbinom(100,1,0.5)
x
rbinom(100,2,0.5)
system.time(mean(x))
?system.time
system.time(readLines("http://www.jhsph.edu"))
hilbert<-function(n){}
hilbert<-function(n){
i<-1:n
1/outer(i-1,i,"+")
}
hilbert(10)
x<-hilbert(1000)
system.time(svd(x))
lm(y~x)
set.seed(1)
rpois(5,2)
rpois(5,2)
rpois(5,2)
rpois(5,2)
set.seed(1)
rpois(5,2)
?rpois
set.seed(10)
x<-rep(0:1,each5)
x<-rep(0:1,each=5)
x
x
e<-rnorm(10,0,20)
y<-0.5+2*x+e
y
install.packages("RMySQL")
ucsc<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library("RMySQL")
ucsc<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;")
result<-dbGetQuery(ucsc,"show databases;")
dbDisconnect(ucsc)
result\
result
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19,"affyU133Plus2")
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
dbListFields(hg19,"affyU133Plus2")
dbDisconnect(ucsc)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
install.packages("httr")
install.packages("httpuv")
library("httr")
library("httpuv")
oauth_endpoints("github")
myapp <- oauth_app("github",key="40220c72ae40b454754c",secret="ace29deeab61c6c09553173d8ce2d1d599635902")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
myapp <- oauth_app("github",key="40220c72ae40b454754c",secret="ace29deeab61c6c09553173d8ce2d1d599635902")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token=github_token)
req(GET("https://api.github.com/users/jtleek/repos"))
req<-GET("https://api.github.com/users/jtleek/repos",gtoken)
names(req)
req
stop_for_status(req)
content(req)
str(req)
library("jsonlite")
jsoned<-froJSON(req)
jsoned<-fromJSON(req)
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
myapp <- oauth_app("github",key="40220c72ae40b454754c",secret="ace29deeab61c6c09553173d8ce2d1d599635902")
github_token <- oauth2.0_token(oauth_endpoints("github"),myapp)
gtoken <- config(token=github_token)
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
req<-GET("https://api.github.com/users/jtleek/repos",gtoken)
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
install.packages("curl")
install.packages("curl")
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
library("jsonlite")
jsoned<-fromJSON("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902")
jsoned<-fromJSON(GET("https://api.github.com/users/jtleek/repos?access_token=ace29deeab61c6c09553173d8ce2d1d599635902"))
fromJSON(req)
req
toJSON(req)
json1 = content(req)
json1
json2 =jsonlite::fromJSON(toJSON(json1))
json2
class(req)
json1<-toJSON(req)
req
class(req)
json1 = content(req)
class(json1)
json2<-toJSON(json1)
class(json2)
json2 =fromJSON(toJSON(json1))
json1 = content(req)
json2 =fromJSON(toJSON(json1))
json2
names(json2)
head(json2)
json2[6,]
json2[6,]$created_at
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url, destfile="acs.csv", "internal")
library("sqldf")
install.packages("sqldf")
library("sqldf")
acs<-read.csv("acs.csv")
head(acs)
acs$pwgtp1
which(acs$pwgtp1<50)
acs$pwgtp1<50
acs[acs$pwgtp1<50]
acs[acs$pwgtp1<50,]
subset(acs$pwgtp1, acs$pwgtp1<50)
mean(subset(acs$pwgtp1, acs$pwgtp1<50))
sqldf("select pwgtp1 from acs where AGEP < 50")
unique(acs$AGEP)
sqldf("select unique AGEP from acs")
sqldf("select distinct AGEP from acs")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode=readLines(con)
close(con)
htmlCode
?nchar
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(9,3,4,3,4,3,4,3,4))
read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,3,4,3,4,3,4,3,4))
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,5,4,5,4,5,4))
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,5,4,5,4,5,4),header=TRUE)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",widths=c(10,5,4,5,4,5,4,5,4),header=TRUE, sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",header=TRUE, sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",header=TRUE, sep=" ", widths=c(10,4))
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for",header=TRUE, sep=" ", widths=c(10,4), skip=1)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", sep=" ", widths=c(10,4), skip=1)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", sep=" ", widths=c(3), skip=1)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(3), skip=1)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,5), skip=1)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=1)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2, header=TRUE,sep="/n")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2, header=TRUE,sep="")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=2, header=TRUE,sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3, header=TRUE,sep="")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3, header=TRUE,sep=" ")
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5,4), skip=3)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=3)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,5), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4,5), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4,5,4,5), skip=4)
head(data)
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,4,5,4,5,4,5,4,4,5,4,5,4), skip=4)
head(data)
data
data<-read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", widths=c(10,-5,4,4,-5,4,4,-5,4,4,-5,4,4), skip=4)
head(data)
data$v4
data$V4
class(data$v4)
class(data$V4)
sum(data$V4)
library(nlme)
library(lattice)
xyplot(weight~Time|Diet, BodyWeight)
?xyplot
library(datasets)
data(airquality)
head(airquality)
class(airquality)
colClass(airquality)
colClasses(airquality)
classes(airquality)
classes<-sapply(airquality,class)
classes
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
install.packages(ggplot2)
install.packages(ggplot)
library(ggplot2)
library("ggplot2")
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
classes<-sapply(airquality,class)
classes
library(datasets)
data(airquality)
classes<-sapply(airquality,class)
classes
setwd("C:/Users/Serena/RepData_PeerAssessment1")
read.csv("activity.csv")
data <- read.csv("activity.csv")
names(data)
summary(data)
activity<-group_by(data, date)
library(dplyr)
data <- read.csv("activity.csv")
names(data)
summary(data)
activity<-group_by(data, date)
head(activity)
summary(activity)
sumSteps<-summarize(activity, steps=sum(steps))
sumSteps
sumSteps<-summarize(activity, steps=sum(steps, na.rm=TRUE))
sumSteps
?hist
hist(sumSteps)
hist(sumSteps$steps)
summary(sumSteps)
len(sumSteps)
dim(sumSteps)
sumSteps<-summarize(activity, steps=sum(steps))
hist(sumSteps$steps)
dim(sumSteps)
hist(sumSteps$steps, break=61)
hist(sumSteps$steps, breaks=61)
hist(sumSteps$steps, breaks=62)
sumSteps<-summarize(activity, steps=sum(steps, na.rm=T))
hist(sumSteps$steps, breaks=61)
sumSteps<-summarize(activity, steps=sum(steps))
hist(sumSteps$steps, breaks=61)
?hist
hist(sumSteps$steps, breaks=61, main="Sum of Steps Taken Per Day")
hist(sumSteps$steps, breaks=61, main="Sum of Steps Taken Per Day", xlab="Steps")
hist(sumSteps$steps, breaks=61, main="Sum of Steps Taken Per Day", xlab="# Steps")
activity
meanSteps<-summarize(activity, AvgSteps=mean(steps))
meanSteps
medianSteps<-summarize(activity, MedianSteps=median(steps))
medianSteps
medianSteps<-summarize(activity, MedianSteps=median(steps, na.rm=TRUE))
medianSteps
sumSteps
meanSteps<-mean(sumSteps$steps)
medianSteps<-median(sumSteps$steps)
TotalSteps<-summarize(activity, steps=sum(steps))
hist(TotalSteps$steps, breaks=61, main="Total Steps Taken Per Day", xlab="# Steps")
meanSteps<-mean(TotalSteps$steps)
medianSteps<-median(TotalSteps$steps)
meanSteps
medianSteps
meanSteps<-mean(TotalSteps$steps, na.rm=TRUE)
meanSteps
medianSteps
?median
TotalSteps@steps
TotalSteps$steps
median(TotalSteps$steps, na.rm=TRUE)
medianSteps<-median(TotalSteps$steps, na.rm=TRUE)
medianSteps
data
head(data)
